#!/bin/bash
#### Description: Realiza a importação do CVS para GIT, com as APIs "git cvsimport" e "cvs2git"
#### Written by: 
####   - Tiago Costa - tiago.costa@mv.com.br on 10-2015
####   - Julio Tobias - julio.tobias@mv.com.br on 10-2015

#Carregando funções utilitárias
source $GITCVS_HOME/cm_tool
process_options $@
shift $((OPTIND-1))


#Checkagem se os 2 parâmetros obrigatórios estão definidos
if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ]
then
	echo "Selecione o projeto MVFOR para realizar a migração para GIT:"
	echo "ex:  mv-migrate <group_name> <project_name> <project_version> <skip_pattern>"
	echo ""
	exit 1
fi

echo "============================================="
echo "= Executando a importação do CVS para GIT   ="
echo "============================================="

#Definindo variáveis
endpoint_url=$(echo $GITLAB_ENDPOINT | cut -d'/' -f3) #Ex: https://git.mv.com.br -> git.mv.com.br
group_name=$1
project_name=$(echo $2 | cut -d'/' -f 1)
project_version=$3
project_name_maven=$(echo "$project_name" | sed -r 's/\./-/g')
project_remote=git@${endpoint_url}:$group_name/${project_name_maven}.git
GITCVS_HOME="$( dirname "${BASH_SOURCE[0]}" )"



echo "###################################"
echo "### Exportando para o repo remoto"

if [ $project_name != $project_name_maven ]; then
	mv $project_name $project_name_maven
	project_name=$project_name_maven
fi

cd $project_name


if [[ -z "$(git remote &> /dev/null)" ]] || [[ -z "$(git remote origin &> /dev/null)" ]]; then
	echo "Incluindo configuração do repositório remoto"
	git remote add origin $project_remote
fi

#RN5 - Caso o repositório remoto não exista será criado pelo script ``create-projects``
if ! git ls-remote origin ; then
	$GITCVS_HOME/gitlab_create-projects $GITLAB_ENDPOINT $GITLAB_TOKEN $group_name/$project_name
fi
#RN6 - Empurra as branches e tags do projeto, caso o projeto seja identificado 
#como pertencente do group SoulMV (ERP), as branches remotas seguirão o padrão:
if [[  "$OPT_T" == SOULMV  ]]; then
	if [ -n "$(git tag -l 'V1-0')" ]; then
		git tag -d 'V1-0'
	fi

	git checkout V1-0
	git tag -a v$project_version -m "Versão $project_version - Migração do CVS" \
		|| echo "Tag v$project_version já existe no repositório"

	if ! git branch | grep develop; then 
		git checkout -b develop; 
	fi;

	git push origin V1-0:master develop v$project_version
	
	if git branch | grep origin; then
		git push origin origin
	fi
	
	$GITCVS_HOME/gitlab_protect-branches $GITLAB_ENDPOINT $GITLAB_TOKEN $group_name/$project_name develop master
	sleep 2
	$GITCVS_HOME/gitlab_default-branch $GITLAB_ENDPOINT $GITLAB_TOKEN $group_name/$project_name develop
else
	git push origin --all
	git push origin --tags
	$GITCVS_HOME/gitlab_protect-branches $GITLAB_ENDPOINT $GITLAB_TOKEN $group_name/$project_name master
fi
